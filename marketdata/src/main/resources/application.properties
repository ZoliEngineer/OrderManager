spring.data.mongodb.uri=mongodb+srv://juzoadmin:${MONGODBPASS}@ordermanagerdata.global.mongocluster.cosmos.azure.com/Investments?tls=true&authMechanism=SCRAM-SHA-256&retrywrites=false&maxIdleTimeMS=120000

# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.bootstrap-servers=	
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='D35J65QM7UE4X26H' password='cfltwNgriqtMQ13AiP1rx4c/AGa8368CisB47oHWKdDnjDChbq2usAwZVqgOsERw';
spring.kafka.properties.security.protocol=SASL_SSL

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000

client.id=ccloud-springboot-client-fbe68816-e83d-4e1a-842b-b3ef78745520
app.kafka.topic.stock-purchase=Order_Stream

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer configuration
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

# Key Vault URL
#spring.cloud.azure.keyvault.secret.endpoint=https://akv-om.vault.azure.net/

# Let Spring Boot load secrets as properties
#spring.cloud.azure.keyvault.secret.property-sources[0].endpoint=https://akv-om.vault.azure.net/
